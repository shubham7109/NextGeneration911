Table: person
Columns:
id varchar(45) PK
phoneNumber varchar(45)
gender varchar(45)
firstName varchar(45)
middleName varchar(45)
lastName varchar(45)
homeAddress varchar(45)
city varchar(45)
state varchar(45)
zipcode int(11)
dateOfBirth date
licensePlateNumber varchar(45)
vehicle varchar(45)
bloodType varchar(45)
heightCentimeters int(11)
weightKilograms int(11)

ssh paulmb@proj-309-sb-5.cs.iastate.edu

mvn clean install
java -jar target/jarname.jar

It will show u a list of processes out of which one will be your executable jar.
ps -ef | grep java

Just kill that process by its process id.
sudo kill -9 <pid>

===keep a process running after ssh disconnection===
https://unix.stackexchange.com/questions/89483/keeping-a-process-running-after-putty-or-terminal-has-been-closed/89487
If you're running bash a shell, you can alternatively use the disown command which will have the same result than the nohup command except it takes the first running program it finds. For example :

$ command &
$ disown
Or maybe you can create a script that forks your process and kills the father so that the child is inherited by init. That's what I do for scripts for example. It's not simpler but when you launch it, it automatically goes to background and doesn't terminate if you log off.

Another solution would be to create a service file and enable it so you can start, stop, restart or whatever with a simple command. (but I don't really know if debian is using systemd since I'm on archlinux)
